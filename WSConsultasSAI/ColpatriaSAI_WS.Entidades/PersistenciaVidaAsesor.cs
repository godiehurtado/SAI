//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI_WS.Entidades
{
    
    [DataContract]
    public partial class PersistenciaVidaAsesor : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public Nullable<double> minimo
        {
            get { return _minimo; }
            set
            {
                if (_minimo != value)
                {
                    OnComplexPropertyChanging();
                    _minimo = value;
                    OnPropertyChanged("minimo");
                }
            }
        }
        private Nullable<double> _minimo;
    
        [DataMember]
        public string mes
        {
            get { return _mes; }
            set
            {
                if (_mes != value)
                {
                    OnComplexPropertyChanging();
                    _mes = value;
                    OnPropertyChanged("mes");
                }
            }
        }
        private string _mes;
    
        [DataMember]
        public Nullable<double> porcentaje
        {
            get { return _porcentaje; }
            set
            {
                if (_porcentaje != value)
                {
                    OnComplexPropertyChanging();
                    _porcentaje = value;
                    OnPropertyChanged("porcentaje");
                }
            }
        }
        private Nullable<double> _porcentaje;
    
        [DataMember]
        public Nullable<double> colquinesDescontar
        {
            get { return _colquinesDescontar; }
            set
            {
                if (_colquinesDescontar != value)
                {
                    OnComplexPropertyChanging();
                    _colquinesDescontar = value;
                    OnPropertyChanged("colquinesDescontar");
                }
            }
        }
        private Nullable<double> _colquinesDescontar;
    
        [DataMember]
        public string tipoPersistencia
        {
            get { return _tipoPersistencia; }
            set
            {
                if (_tipoPersistencia != value)
                {
                    OnComplexPropertyChanging();
                    _tipoPersistencia = value;
                    OnPropertyChanged("tipoPersistencia");
                }
            }
        }
        private string _tipoPersistencia;

        #endregion
        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, PersistenciaVidaAsesor complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("String parameter cannot be null or empty.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.minimo", parentPropertyName), complexObject == null ? null : (object)complexObject.minimo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.mes", parentPropertyName), complexObject == null ? null : (object)complexObject.mes);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.porcentaje", parentPropertyName), complexObject == null ? null : (object)complexObject.porcentaje);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.colquinesDescontar", parentPropertyName), complexObject == null ? null : (object)complexObject.colquinesDescontar);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.tipoPersistencia", parentPropertyName), complexObject == null ? null : (object)complexObject.tipoPersistencia);
        }

        #endregion
    }
}
